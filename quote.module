<?php

/**
 * @file
 * The quote module provides a filter and appropriate links that allow users to
 * quote nodes and other comments in their own comments.
 */

/**
 * Implements hook_help().
 */
function quote_help($path, $arg) {

}

/**
 * Implements hook_permission().
 */
function quote_permission() {
  return [
    'administer quote' => [
      'title' => t('Administer Quote module')],
    'use quote' => [
      'title' => t('Use Quote module')],
    ];
}

/**
 * Implements hook_node_view().
 */
function quote_node_view($node, $view_mode) {
/*  if (user_access('post comments') && in_array($node->type, _quote_variable_get('node_types')) && $node->comment == COMMENT_NODE_OPEN && _quote_variable_get('node_link_display')) {
  }*/
  if (user_access('post comments') && user_access('use quote')) {
    drupal_add_js(drupal_get_path('module', 'quote') . '/js/quote.js');

    $links['node-quote-sel'] = [
      'title' => t('quote selected'),
      'href' => '',
      'query' => '',
      'fragment' => ''
    ];
    $node->content['links']['comment']['#links']['node-quote-sel'] = $links['node-quote-sel'];

    $links['node-quote-all'] = [
      'title' => t('quote all'),
      'href' => '',
      'query' => '',
      'fragment' => ''
    ];
    $node->content['links']['comment']['#links']['node-quote-all'] = $links['node-quote-all'];

    /*$links['node-quote-all-reply'] = [
      'title' => t('reply and quote all'),
      'href' => "comment/reply/$node->nid/",
      'query' => ['node-quote-all-reply-nid' => $node->nid],
      'fragment' => ''
    ];
    $node->content['links']['comment']['#links']['node-quote-all-reply'] = $links['node-quote-all-reply'];*/
  }
}

/**
 * Implements hook_comment_view().
 */
function quote_comment_view($comment) {
/*   if (in_array($node->type, _quote_variable_get('node_types')) && $node->comment == COMMENT_NODE_OPEN) {
  }*/
  if (user_access('post comments') && user_access('use quote')) {
    drupal_add_js(drupal_get_path('module', 'quote') . '/js/quote.js');

    $links['comment-quote-sel'] = [
      'title' => t('quote selected'),
      'href' => '',
      'query' => '',
      'fragment' => ''
    ];
    $comment->content['links']['comment']['#links']['comment-quote-sel'] = $links['comment-quote-sel'];

    $links['comment-quote-all'] = [
      'title' => t('quote all'),
      'href' => '',
      'query' => '',
      'fragment' => ''
    ];
    $comment->content['links']['comment']['#links']['comment-quote-all'] = $links['comment-quote-all'];

    $node = node_load($comment->nid);
    $links['comment-quote-all-reply'] = [
      'title' => t('reply and quote all'),
      'href' => "comment/reply/$node->nid/$comment->cid",
      'query' => ['comment-quote-all-reply' => $comment->cid],
      'fragment' => ''
    ];
    $comment->content['links']['comment']['#links']['comment-quote-all-reply'] = $links['comment-quote-all-reply'];
  }
}

/**
 * Implements hook_form_alter().
 */
function quote_form_alter(&$form, &$form_state, $form_id) {
  /*if ($form['#id'] == 'comment-form' && isset($_GET['node-quote-all-reply-nid'])) {
    $node = node_load($_GET['node-quote-all-reply-nid']);
    $user = user_load($node->uid);
    $language = $form['comment_body']['#language'];
    $form['comment_body'][$language][0]['#default_value'] =
      '<blockquote><strong>' . $user->name . ' wrote:</strong> ' . $node->body['und'][0]['value'] . '</blockquote>';
  }*/

  if ($form['#id'] == 'comment-form' && isset($_GET['comment-quote-all-reply'])) {
    $comment = comment_load($_GET['comment-quote-all-reply']);
    $user = user_load($comment->uid);
    $language = $form['comment_body']['#language'];
    $form['comment_body'][$language][0]['#default_value'] =
      '<blockquote><strong>' . $user->name . ' wrote:</strong> ' . $comment->comment_body['und'][0]['value'] . '</blockquote>';
  }
}
